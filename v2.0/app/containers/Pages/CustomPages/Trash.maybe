const required = value => (value == null ? 'Required' : undefined);
const email = value => (
  value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i.test(value)
    ? 'Invalid email'
    : undefined
);



----------------
   
   import React from 'react';
import { PropTypes } from 'prop-types';
import TextField from '@material-ui/core/TextField';
import { withStyles } from '@material-ui/core/styles';
import { styles, vanish, uploadBox } from './../styles';
import Paper from '@material-ui/core/Paper';
import Typography from '@material-ui/core/Typography';
import Grid from '@material-ui/core/Grid';
import MenuItem from '@material-ui/core/MenuItem';
import Button from '@material-ui/core/Button';
import Type from 'dan-styles/Typography.scss';
import DeleteIcon from '@material-ui/icons/Close';
import Fab from '@material-ui/core/Fab';
import Public from '@material-ui/icons/Public';

class AboutUs extends React.Component {

  render() {
    const { classes } = this.props;
    
    
  }
}
export default withStyles(styles)(AboutUs)
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   findSectionObj = (val) => {
    var section = this.state.available_sections;
    for (var i = 0; i < section.length; i++) {
      if (section[i].name === val) {
        return section[i];
      }
    }
    return null;
  }
  
  stringifySelected() {
    var string = "";
    var items = this.state.selected_sections;
    for (var i = 0; i < items.length; i++) {
      if (string !== "") {
        string += ", " + items[i].name;
      }
      else {
        string = items[i].name;
      }
    }
    return string;
  }

  
  removeSection = (id) => {
    var sel = this.state.selected_sections;
    this.setState({ selected_sections: sel.filter(itm => itm.id !== id) })
  }
  ejectSelectedSections(classes) {
    return this.state.selected_sections.map((item) => {
      return (
        <Fab
          onClick={() => { this.removeSection(item.id) }}
          key={item.id.toString()}
          style={{ background: '#af0f0f', color: "white", margin: 5 }}
          variant="extended"
          color="danger"
          aria-label="Delete"
          className={classes.button}
        >
          {item.name}
          <DeleteIcon className={classes.extendedIcon} />
        </Fab>
      );
    });
  }
  ejectSelectedSectionsPanel() {
    return this.state.selected_sections.map(item => {
      return this.switchForComponent(item);
    });
  }
 {/* -------Selected Sections -------- */}
            {this.ejectSelectedSections(classes)}
            <TextField
              id="outlined-select-sections"
              select
              label="Choose Sections"
              className={classes.textField}
              fullWidth
              onChange={option => { this.handleSectionChoice(option) }}
              SelectProps={{
                MenuProps: {
                  className: classes.menu,
                },
              }}
              helperText={"Add Sections To The Wayland Home Page And Fill Them Below "}
              margin="normal"
              variant="outlined"
            >
              {available_sections.map(option => (
                <MenuItem key={option.id.toString()} id={option.id} value={option.name}>
                  {option.name}
                </MenuItem>
              ))}
            </TextField>

handleSectionChoice = (event) => {
    const wholeTray = this.findSectionObj(event.target.value);
    const oldValues = this.state.selected_sections;
    this.setState({ selected_sections: oldValues.includes(wholeTray) ? [...oldValues] : [...oldValues, wholeTray] });
  }
  available_sections: [
        { id: 1, name: "Terms Of Service" },
        { id: 2, name: "Privacey Policy" },
        { id: 3, name: "Donate Bar" },
        { id: 4, name: "Graph Section" },
        { id: 5, name: "Donate Page Header" },
        { id: 6, name: "Welcome Images" },
        { id: 7, name: "Icon Quick Links" },
        { id: 8, name: "About Us Video" },
        { id: 9, name: "Donate Page Button" },
        { id: 10, name: "Home Header" },
        { id: 11, name: "About Us Description" },
      ],




      switchForComponent = (section) => {
    switch (section.id) {
      case 7:
        return (
          <IconQuickLinks
            key={section.id}
            addFeaturesFxn={this.addFeatures}
            selectedFeatures={this.state.selected_icon_features}
            removeFeatureFxn={this.removeIconFeature}
          />
        );
        break;
      case 8:
        return <AboutUsVideo key={section.id} />
        break;
      case 11:
        return <AboutUsDescription key={section.id} />
        break;

      default:
        return <div><h5>Not done yet!</h5></div>
        break;
    }
  }

  